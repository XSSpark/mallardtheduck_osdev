diff -rupN --ignore-space-change libgd-2.1.0/config/config.sub originals/libgd-2.1.0/config/config.sub
--- libgd-2.1.0/config/config.sub	2018-01-04 13:18:31.469726763 +0000
+++ originals/libgd-2.1.0/config/config.sub	2013-06-25 10:58:55.000000000 +0100
@@ -1354,7 +1354,7 @@ case $os in
 	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
 	      | -sym* | -kopensolaris* | -plan9* \
 	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
-	      | -aos* | -aros* | -btos* \
+	      | -aos* | -aros* \
 	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
 	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
 	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
diff -rupN --ignore-space-change libgd-2.1.0/configure originals/libgd-2.1.0/configure
--- libgd-2.1.0/configure	2018-01-04 13:18:31.473726763 +0000
+++ originals/libgd-2.1.0/configure	2013-06-25 14:53:41.000000000 +0100
@@ -5587,10 +5587,6 @@ sysv4 | sysv4.3*)
 tpf*)
   lt_cv_deplibs_check_method=pass_all
   ;;
-  
-btos*)
-  lt_cv_deplibs_check_method=pass_all
-  ;;
 esac
 
 fi
@@ -10231,17 +10227,6 @@ uts4*)
   shlibpath_var=LD_LIBRARY_PATH
   ;;
   
-btos*)
-  version_type=linux
-  libname_spec='$name'
-  shrext_cmds=".ell"
-  need_lib_prefix=no
-  library_names_spec='$libname${shared_ext}'
-  dynamic_linker="$host_os ELOADER"
-  shlibpath_var=LIBPATH
-  soname_spec='$libname${shared_ext}'
-  ;;
-
 *)
   dynamic_linker=no
   ;;
diff -rupN --ignore-space-change libgd-2.1.0/src/gd.c originals/libgd-2.1.0/src/gd.c
--- libgd-2.1.0/src/gd.c	2018-01-04 13:18:31.473726763 +0000
+++ originals/libgd-2.1.0/src/gd.c	2013-06-25 10:58:23.000000000 +0100
@@ -561,14 +561,6 @@ BGD_DECLARE(int) gdImageColorResolve (gd
 
 BGD_DECLARE(int) gdImageColorResolveAlpha (gdImagePtr im, int r, int g, int b, int a)
 {
-	if(a >= gdAlphaTransparent){
-		int ret = gdImageGetTransparent(im);
-		if(ret == -1){ 
-			ret = gdImageColorAllocate(im, 255, 0, 255);
-			gdImageColorTransparent(im, ret);
-		}
-		return ret;
-	}
 	int c;
 	int ct = -1;
 	int op = -1;
@@ -2379,7 +2371,7 @@ BGD_DECLARE(void) gdImageCopy (gdImagePt
 		if (src->trueColor) {
 			for (y = 0; (y < h); y++) {
 				for (x = 0; (x < w); x++) {
-					int c = gdImageTrueColorPixel (src, srcX + x, srcY + y);
+					int c = gdImageGetTrueColorPixel (src, srcX + x, srcY + y);
 					if (c != src->transparent) {
 						gdImageSetPixel (dst, dstX + x, dstY + y, c);
 					}
@@ -2389,7 +2381,7 @@ BGD_DECLARE(void) gdImageCopy (gdImagePt
 			/* source is palette based */
 			for (y = 0; (y < h); y++) {
 				for (x = 0; (x < w); x++) {
-					int c = gdImagePalettePixel (src, srcX + x, srcY + y);
+					int c = gdImageGetPixel (src, srcX + x, srcY + y);
 					if (c != src->transparent) {
 						gdImageSetPixel(dst, dstX + x, dstY + y, gdTrueColorAlpha(src->red[c], src->green[c], src->blue[c], src->alpha[c]));
 					}
@@ -3033,7 +3025,7 @@ BGD_DECLARE(void) gdImageFilledPolygon (
 		for (i = 0; (i < (ints-1)); i += 2) {
 			/* 2.0.29: back to gdImageLine to prevent segfaults when
 			  performing a pattern fill */
-			gdImageLine (im, im->polyInts[i], y, im->polyInts[i + 1] - ((im->polyInts[i + 1] != im->polyInts[i])? 1 : 0), y,
+			gdImageLine (im, im->polyInts[i], y, im->polyInts[i + 1], y,
 			             fill_color);
 		}
 	}
diff -rupN --ignore-space-change libgd-2.1.0/src/gdcache.c originals/libgd-2.1.0/src/gdcache.c
--- libgd-2.1.0/src/gdcache.c	2018-01-04 13:18:31.473726763 +0000
+++ originals/libgd-2.1.0/src/gdcache.c	2013-06-25 10:58:23.000000000 +0100
@@ -5,8 +5,6 @@
 #include "gd.h"
 #include "gdhelpers.h"
 
-#include <btos.h>
-
 #ifdef HAVE_LIBTTF
 #	define NEED_CACHE 1
 #else
diff -rupN --ignore-space-change libgd-2.1.0/src/gd_errors.h originals/libgd-2.1.0/src/gd_errors.h
--- libgd-2.1.0/src/gd_errors.h	2018-01-04 13:18:31.473726763 +0000
+++ originals/libgd-2.1.0/src/gd_errors.h	2013-06-25 10:58:23.000000000 +0100
@@ -1,7 +1,7 @@
 #ifndef GD_ERRORS_H
 #define GD_ERRORS_H
 
-#if !defined(_WIN32) && !defined(__btos__)
+#ifndef _WIN32
 # include <syslog.h>
 #else
 /*
diff -rupN --ignore-space-change libgd-2.1.0/src/gdft.c originals/libgd-2.1.0/src/gdft.c
--- libgd-2.1.0/src/gdft.c	2019-02-14 15:14:44.143983551 +0000
+++ originals/libgd-2.1.0/src/gdft.c	2013-06-25 10:58:23.000000000 +0100
@@ -5,7 +5,6 @@
 /* John Ellson   ellson@graphviz.org        */
 /********************************************/
 
-#include <btos.h>
 
 #include <stdio.h>
 #include <stdlib.h>
@@ -73,8 +72,6 @@ static char *font_path(char **fontpath,
 #    define DEFAULT_FONTPATH "C:\\WINDOWS\\FONTS;C:\\WINNT\\FONTS"
 #  elif defined(__APPLE__) || (defined(__MWERKS__) && defined(macintosh))
 #    define DEFAULT_FONTPATH "/usr/share/fonts/truetype:/System/Library/Fonts:/Library/Fonts"
-#  elif defined(__btos__)
-#    define DEFAULT_FONTPATH "HDD:/BTOS/FONTS"
 #  else
    /* default fontpath for unix systems  - whatever happened to standards ! */
 #    define DEFAULT_FONTPATH "/usr/X11R6/lib/X11/fonts/TrueType:/usr/X11R6/lib/X11/fonts/truetype:/usr/X11R6/lib/X11/fonts/TTF:/usr/share/fonts/TrueType:/usr/share/fonts/truetype:/usr/openwin/lib/X11/fonts/TrueType:/usr/X11R6/lib/X11/fonts/Type1:/usr/lib/X11/fonts/Type1:/usr/openwin/lib/X11/fonts/Type1"
@@ -82,7 +79,7 @@ static char *font_path(char **fontpath,
 #endif
 
 #ifndef PATHSEPARATOR
-#  if defined(NETWARE) || defined(_WIN32) || defined(__btos__)
+#  if defined(NETWARE) || defined(_WIN32)
 #    define PATHSEPARATOR ";"
 #  else
 #    define PATHSEPARATOR ":"
@@ -931,8 +928,6 @@ BGD_DECLARE(char *) gdImageStringFTEx (g
 
 			strex->fontpath = (char *) gdMalloc(fontpath_len + 1);
 			if (strex->fontpath == NULL) {
-				gdCacheDelete (tc_cache);
-				gdMutexUnlock (gdFontCacheMutex);
 				return "could not alloc full list of fonts";
 			}
 			strncpy(strex->fontpath, font->fontpath, fontpath_len);
@@ -1079,6 +1074,7 @@ BGD_DECLARE(char *) gdImageStringFTEx (g
 			continue;
 		}
 
+
 		switch (encoding) {
 		case gdFTEX_Unicode: {
 			/* use UTF-8 mapping from ASCII */
@@ -1203,11 +1199,8 @@ BGD_DECLARE(char *) gdImageStringFTEx (g
 		}
 		oldpenf.x = penf.x;
 
-		horiAdvance = 0;
-		if (brect) {
-			/* only if need brect */
 			/* load glyph image into the slot (erase previous one) */
-			err = FT_Load_Glyph (face, glyph_index, FT_LOAD_NO_HINTING);//render_mode);
+		err = FT_Load_Glyph (face, glyph_index, render_mode);
 			if (err) {
 				if (tmpstr)
 					gdFree (tmpstr);
@@ -1215,8 +1208,12 @@ BGD_DECLARE(char *) gdImageStringFTEx (g
 				gdMutexUnlock (gdFontCacheMutex);
 				return "Problem loading glyph";
 			}
+
 			horiAdvance = slot->metrics.horiAdvance;
 
+		if (brect) {
+			/* only if need brect */
+
 			glyph_min.x = penf.x + slot->metrics.horiBearingX;
 			glyph_min.y = penf.y - slot->metrics.horiBearingY;
 
@@ -1250,7 +1247,7 @@ BGD_DECLARE(char *) gdImageStringFTEx (g
 			FT_Activate_Size (platform_specific);
 
 			/* load glyph again into the slot (erase previous one)  - this time with scaling */
-			err = FT_Load_Glyph (face, glyph_index, render_mode | FT_LOAD_RENDER);
+			err = FT_Load_Glyph (face, glyph_index, render_mode);
 			if (err) {
 				if (tmpstr)
 					gdFree (tmpstr);
@@ -1258,7 +1255,6 @@ BGD_DECLARE(char *) gdImageStringFTEx (g
 				gdMutexUnlock (gdFontCacheMutex);
 				return "Problem loading glyph";
 			}
-			if(!horiAdvance) horiAdvance = slot->metrics.horiAdvance * (METRIC_RES / hdpi);
 
 			/* load and transform glyph image */
 			FT_Get_Glyph (slot, &image);
@@ -1328,15 +1324,9 @@ BGD_DECLARE(char *) gdImageStringFTEx (g
 		gdFree (tmpstr);
 	gdCacheDelete (tc_cache);
 	gdMutexUnlock (gdFontCacheMutex);
-	
 	return (char *) NULL;
 }
 
-BGD_DECLARE(FT_Library *) gdGetFTLibrary(void){
-	if(gdFontCacheSetup()) return NULL;
-	return &library;
-}
-
 #endif /* HAVE_LIBFREETYPE */
 
 #ifdef HAVE_LIBFONTCONFIG
@@ -1553,7 +1543,7 @@ static char * font_path(char **fontpath,
 			return "could not alloc full path of font";
 		}
 		/* if name is an absolute or relative pathname then test directly */
-#if defined(NETWARE) || defined(__btos__)
+#ifdef NETWARE
 		/* netware uses the format "volume:/path" or the standard "/path" */
 		if (name[0] != 0 && (strstr(name, ":/") || name[0] == '/'))
 #else
diff -rupN --ignore-space-change libgd-2.1.0/src/gdpp.h originals/libgd-2.1.0/src/gdpp.h
--- libgd-2.1.0/src/gdpp.h	2018-01-04 13:18:31.473726763 +0000
+++ originals/libgd-2.1.0/src/gdpp.h	2013-06-25 10:58:23.000000000 +0100
@@ -1476,7 +1476,7 @@ public:
 		return gdImageTrueColorPixel(im, x, y);
 	}
 
-	gdImagePtr GetPtr() const {
+	const gdImagePtr GetPtr() const {
 		return im;
 	}
 
diff -rupN --ignore-space-change libgd-2.1.0/src/Makefile.in originals/libgd-2.1.0/src/Makefile.in
--- libgd-2.1.0/src/Makefile.in	2018-01-04 13:18:31.477726763 +0000
+++ originals/libgd-2.1.0/src/Makefile.in	2013-06-25 14:53:39.000000000 +0100
@@ -393,7 +393,7 @@ top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 bin_SCRIPTS = bdftogd
 EXTRA_DIST = bdftogd demoin.png entities.html entities.tcl CMakeLists.txt config.h.cmake gd_io_stream.cxx gdpp.cxx msinttypes/inttypes.h msinttypes/stdint.h
-include_HEADERS = gd.h gdfx.h gd_io.h gdcache.h gdfontg.h gdfontl.h gdfontmb.h gdfonts.h gdfontt.h entities.h gd_color_map.h gd_errors.h gdpp.h gd_io_stream.h
+include_HEADERS = gd.h gdfx.h gd_io.h gdcache.h gdfontg.h gdfontl.h gdfontmb.h gdfonts.h gdfontt.h entities.h gd_color_map.h gd_errors.h gdpp.h
 lib_LTLIBRARIES = libgd.la
 libgd_la_SOURCES = gd.c gd_color.c gd_color_map.c gd_transform.c gdfx.c gd_security.c gd_gd.c gd_gd2.c gd_io.c gd_io_dp.c gd_gif_in.c    \
                    gd_gif_out.c gd_io_file.c gd_io_ss.c gd_jpeg.c gd_png.c gd_ss.c gd_topal.c gd_wbmp.c gdcache.c gdfontg.c gdfontl.c    \
